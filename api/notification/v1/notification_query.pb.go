// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: notification/v1/notification_query.proto

package notificationv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type QueryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryRequest) Reset() {
	*x = QueryRequest{}
	mi := &file_notification_v1_notification_query_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRequest) ProtoMessage() {}

func (x *QueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notification_v1_notification_query_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRequest.ProtoReflect.Descriptor instead.
func (*QueryRequest) Descriptor() ([]byte, []int) {
	return file_notification_v1_notification_query_proto_rawDescGZIP(), []int{0}
}

func (x *QueryRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type QueryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        *SendResponse          `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryResponse) Reset() {
	*x = QueryResponse{}
	mi := &file_notification_v1_notification_query_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryResponse) ProtoMessage() {}

func (x *QueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notification_v1_notification_query_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryResponse.ProtoReflect.Descriptor instead.
func (*QueryResponse) Descriptor() ([]byte, []int) {
	return file_notification_v1_notification_query_proto_rawDescGZIP(), []int{1}
}

func (x *QueryResponse) GetResult() *SendResponse {
	if x != nil {
		return x.Result
	}
	return nil
}

type BatchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Keys          []string               `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchRequest) Reset() {
	*x = BatchRequest{}
	mi := &file_notification_v1_notification_query_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchRequest) ProtoMessage() {}

func (x *BatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notification_v1_notification_query_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchRequest.ProtoReflect.Descriptor instead.
func (*BatchRequest) Descriptor() ([]byte, []int) {
	return file_notification_v1_notification_query_proto_rawDescGZIP(), []int{2}
}

func (x *BatchRequest) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

type BatchResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       []*SendResponse        `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchResponse) Reset() {
	*x = BatchResponse{}
	mi := &file_notification_v1_notification_query_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchResponse) ProtoMessage() {}

func (x *BatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notification_v1_notification_query_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchResponse.ProtoReflect.Descriptor instead.
func (*BatchResponse) Descriptor() ([]byte, []int) {
	return file_notification_v1_notification_query_proto_rawDescGZIP(), []int{3}
}

func (x *BatchResponse) GetResults() []*SendResponse {
	if x != nil {
		return x.Results
	}
	return nil
}

var File_notification_v1_notification_query_proto protoreflect.FileDescriptor

const file_notification_v1_notification_query_proto_rawDesc = "" +
	"\n" +
	"(notification/v1/notification_query.proto\x12\x0fnotification.v1\x1a\"notification/v1/notification.proto\" \n" +
	"\fQueryRequest\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\"F\n" +
	"\rQueryResponse\x125\n" +
	"\x06result\x18\x01 \x01(\v2\x1d.notification.v1.SendResponseR\x06result\"\"\n" +
	"\fBatchRequest\x12\x12\n" +
	"\x04keys\x18\x01 \x03(\tR\x04keys\"H\n" +
	"\rBatchResponse\x127\n" +
	"\aresults\x18\x01 \x03(\v2\x1d.notification.v1.SendResponseR\aresults2\xaa\x01\n" +
	"\x18NotificationQueryService\x12F\n" +
	"\x05Query\x12\x1d.notification.v1.QueryRequest\x1a\x1e.notification.v1.QueryResponse\x12F\n" +
	"\x05Batch\x12\x1d.notification.v1.BatchRequest\x1a\x1e.notification.v1.BatchResponseB\xcd\x01\n" +
	"\x13com.notification.v1B\x16NotificationQueryProtoP\x01ZAgithub.com/JrMarcco/jotify-api/api/notification/v1;notificationv1\xa2\x02\x03NXX\xaa\x02\x0fNotification.V1\xca\x02\x0fNotification\\V1\xe2\x02\x1bNotification\\V1\\GPBMetadata\xea\x02\x10Notification::V1b\x06proto3"

var (
	file_notification_v1_notification_query_proto_rawDescOnce sync.Once
	file_notification_v1_notification_query_proto_rawDescData []byte
)

func file_notification_v1_notification_query_proto_rawDescGZIP() []byte {
	file_notification_v1_notification_query_proto_rawDescOnce.Do(func() {
		file_notification_v1_notification_query_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_notification_v1_notification_query_proto_rawDesc), len(file_notification_v1_notification_query_proto_rawDesc)))
	})
	return file_notification_v1_notification_query_proto_rawDescData
}

var file_notification_v1_notification_query_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_notification_v1_notification_query_proto_goTypes = []any{
	(*QueryRequest)(nil),  // 0: notification.v1.QueryRequest
	(*QueryResponse)(nil), // 1: notification.v1.QueryResponse
	(*BatchRequest)(nil),  // 2: notification.v1.BatchRequest
	(*BatchResponse)(nil), // 3: notification.v1.BatchResponse
	(*SendResponse)(nil),  // 4: notification.v1.SendResponse
}
var file_notification_v1_notification_query_proto_depIdxs = []int32{
	4, // 0: notification.v1.QueryResponse.result:type_name -> notification.v1.SendResponse
	4, // 1: notification.v1.BatchResponse.results:type_name -> notification.v1.SendResponse
	0, // 2: notification.v1.NotificationQueryService.Query:input_type -> notification.v1.QueryRequest
	2, // 3: notification.v1.NotificationQueryService.Batch:input_type -> notification.v1.BatchRequest
	1, // 4: notification.v1.NotificationQueryService.Query:output_type -> notification.v1.QueryResponse
	3, // 5: notification.v1.NotificationQueryService.Batch:output_type -> notification.v1.BatchResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_notification_v1_notification_query_proto_init() }
func file_notification_v1_notification_query_proto_init() {
	if File_notification_v1_notification_query_proto != nil {
		return
	}
	file_notification_v1_notification_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_notification_v1_notification_query_proto_rawDesc), len(file_notification_v1_notification_query_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_notification_v1_notification_query_proto_goTypes,
		DependencyIndexes: file_notification_v1_notification_query_proto_depIdxs,
		MessageInfos:      file_notification_v1_notification_query_proto_msgTypes,
	}.Build()
	File_notification_v1_notification_query_proto = out.File
	file_notification_v1_notification_query_proto_goTypes = nil
	file_notification_v1_notification_query_proto_depIdxs = nil
}
